spring.application.name=restaurant_burguer
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.open-in-view=false
#open in view false: fecha a sessão do banco logo após o retorno da camada se service para o controller, sendo assim, não é possivel acessar campos de outras tabelas na entidade retornada, se for lazy

app.security.token.secret=${APP_SECRET}

#in minutes
app.security.token.expiration=${APP_TOKEN_EXPIRATION}

aws.s3.bucket=${AWS_S3_BUCKET}
aws.s3.region=${AWS_S3_REGION}

aws.sns.send-message-arn=${AWS_SNS_SEND_SMS_ARN}
aws.sns.topic.orders-emit=${AWS_SNS_TOPIC_ORDERS_EMIT}
#aws.sns.topic.orders-emit: tem um caractere espaço para dividir do groupID

aws.access-key.id=${AWS_ACCESS_KEY_ID}
aws.secret.access-key=${AWS_SECRET_ACCESS_KEY}

server.port=8000