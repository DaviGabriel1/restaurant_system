name: cicd

env:
  APP_SECRET: ${{secrets.APP_SECRET}}
  APP_TOKEN_EXPIRATION: ${{secrets.APP_TOKEN_EXPIRATION}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}
  AWS_S3_REGION: ${{secrets.AWS_S3_REGION}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_SNS_SEND_SMS_ARN: ${{secrets.AWS_SNS_SEND_SMS_ARN}}
  AWS_SNS_TOPIC_ORDERS_EMIT: ${{secrets.AWS_SNS_TOPIC_ORDERS_EMIT}}
  DB_PASSWORD: ${{secrets.DB_PASSWORD}}
  DB_URL: ${{secrets.DB_URL}}
  DB_USERNAME: ${{secrets.DB_USERNAME}}


on:
  push:
    branches: [homolog]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: checkout source
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        run: mvn clean install -DskipTests
      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_HUB_LOGIN}} -p ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: build docker image
        run: docker build -t davi150205/restaurant_system .
      - name: Push image to Docker Hub
        run: docker push davi150205/restaurant_system:latest

  deploy:
    needs: build
    runs-on: [restaurant-system-ec2]
    steps:
      - name: pull image from docker hub
        run: docker pull davi150205/restaurant_system:latest
      - name: Delete old container
        run: docker rm -f restaurant_system_container
      - name: Run docker container
        run: docker run -d -p 8000:8000 --name restaurant_system_container davi150205/restaurant_system
